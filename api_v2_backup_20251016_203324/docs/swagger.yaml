basePath: /api/v1
definitions:
  github_com_EduardoMG12_cine_api_v2_internal_domain.User:
    properties:
      bio:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      id:
        type: integer
      is_private:
        type: boolean
      profile_picture_url:
        type: string
      theme:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_domain.UserSession:
    properties:
      created_at:
        type: string
      expires_at:
        type: string
      id:
        type: integer
      ip_address:
        type: string
      token:
        type: string
      user_agent:
        type: string
      user_id:
        type: integer
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse:
    properties:
      expires_at:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile'
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.ConfirmEmailRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.CreateReviewRequest:
    properties:
      content:
        maxLength: 2000
        minLength: 1
        type: string
      movie_id:
        type: integer
      rating:
        maximum: 10
        minimum: 1
        type: integer
    required:
    - movie_id
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse:
    properties:
      message:
        type: string
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse:
    properties:
      adult:
        type: boolean
      backdrop_url:
        type: string
      external_id:
        type: string
      genres:
        items:
          type: string
        type: array
      id:
        type: integer
      overview:
        type: string
      poster_url:
        type: string
      release_date:
        type: string
      runtime:
        type: integer
      title:
        type: string
      vote_average:
        type: number
      vote_count:
        type: integer
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse:
    properties:
      movies:
        items:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse'
        type: array
      page:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.RegisterRequest:
    properties:
      display_name:
        maxLength: 100
        minLength: 2
        type: string
      email:
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - display_name
    - email
    - password
    - username
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.ResetPasswordRequest:
    properties:
      new_password:
        maxLength: 100
        minLength: 8
        type: string
      token:
        type: string
    required:
    - new_password
    - token
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewMovieResponse:
    properties:
      adult:
        type: boolean
      backdrop_url:
        type: string
      external_id:
        type: string
      genres:
        items:
          type: string
        type: array
      id:
        type: integer
      overview:
        type: string
      poster_url:
        type: string
      release_date:
        type: string
      runtime:
        type: integer
      title:
        type: string
      vote_average:
        type: number
      vote_count:
        type: integer
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      movie:
        $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewMovieResponse'
      rating:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile'
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile:
    properties:
      bio:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      id:
        type: integer
      is_private:
        type: boolean
      profile_picture_url:
        type: string
      theme:
        type: string
      username:
        type: string
    type: object
  github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse:
    properties:
      details:
        additionalProperties:
          type: string
        type: object
      error:
        type: string
      message:
        type: string
    type: object
  internal_handler.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  internal_handler.UserSettingsRequest:
    properties:
      email_notifications:
        type: boolean
      private_profile:
        type: boolean
      push_notifications:
        type: boolean
      theme:
        enum:
        - light
        - dark
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@cineverse.com
    name: CineVerse API Support
    url: http://www.cineverse.com/support
  description: A comprehensive social network platform for movie enthusiasts
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://cineverse.com/terms/
  title: CineVerse API
  version: "2.0"
paths:
  /auth/confirm-email:
    post:
      consumes:
      - application/json
      description: Verify user's email address using confirmation token
      parameters:
      - description: Email confirmation token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ConfirmEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email confirmed successfully
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse'
        "400":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Confirm email address
      tags:
      - Authentication
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send password reset link to user's email
      parameters:
      - description: User email for password reset
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Request password reset
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user credentials and return access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse'
        "400":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "401":
          description: Authentication failed
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: User login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email verification
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Register a new user
      tags:
      - Authentication
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using reset token from email
      parameters:
      - description: Password reset token and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse'
        "400":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Reset user password
      tags:
      - Authentication
  /movies/{id}:
    get:
      description: Get movie details by internal database ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get movie by ID
      tags:
      - Movies
  /movies/external/{externalId}:
    get:
      description: Get movie details by TMDb external ID
      parameters:
      - description: TMDb Movie ID
        in: path
        name: externalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get movie by external ID
      tags:
      - Movies
  /movies/genre/{genre}:
    get:
      description: Get movies filtered by genre
      parameters:
      - description: Genre name
        in: path
        name: genre
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get movies by genre
      tags:
      - Movies
  /movies/popular:
    get:
      description: Get a list of popular movies
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get popular movies
      tags:
      - Movies
  /movies/search:
    get:
      consumes:
      - application/json
      description: Search for movies by title
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Search movies
      tags:
      - Movies
  /reviews:
    post:
      consumes:
      - application/json
      description: Create a new review for a movie with rating and/or content
      parameters:
      - description: Review data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.CreateReviewRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Review created successfully
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "404":
          description: Movie not found
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "409":
          description: Review already exists
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a movie review
      tags:
      - Reviews
  /reviews/{id}:
    get:
      description: Get detailed information about a specific review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Review details
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse'
        "400":
          description: Invalid review ID
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "404":
          description: Review not found
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get review by ID
      tags:
      - Reviews
  /reviews/movie/{movieId}:
    get:
      description: Get all reviews for a specific movie with pagination
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of movie reviews
          schema:
            items:
              $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse'
            type: array
        "400":
          description: Invalid movie ID
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "404":
          description: Movie not found
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse'
      summary: Get movie reviews
      tags:
      - Reviews
  /users/me/sessions:
    delete:
      consumes:
      - application/json
      description: Revoke all sessions for the authenticated user (logout from all
        devices)
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Revoke all sessions
      tags:
      - users
      - sessions
    get:
      consumes:
      - application/json
      description: Retrieve all active sessions for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_domain.UserSession'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user sessions
      tags:
      - users
      - sessions
  /users/me/sessions/{sessionId}:
    delete:
      consumes:
      - application/json
      description: Revoke a specific session by session ID
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Revoke specific session
      tags:
      - users
      - sessions
  /users/me/settings:
    put:
      consumes:
      - application/json
      description: Update user preferences like theme, notifications, privacy settings
      parameters:
      - description: User settings to update
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/internal_handler.UserSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_EduardoMG12_cine_api_v2_internal_domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user settings
      tags:
      - users
      - settings
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
