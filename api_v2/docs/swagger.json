{
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive social network platform for movie enthusiasts",
        "title": "CineVerse API",
        "termsOfService": "http://cineverse.com/terms/",
        "contact": {
            "name": "CineVerse API Support",
            "url": "http://www.cineverse.com/support",
            "email": "support@cineverse.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/confirm-email": {
            "post": {
                "description": "Verify user's email address using confirmation token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm email address",
                "parameters": [
                    {
                        "description": "Email confirmation token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ConfirmEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email confirmed successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Send password reset link to user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "User email for password reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user credentials and return access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account with email verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Reset user password using reset token from email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "description": "Password reset token and new password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/external/{externalId}": {
            "get": {
                "description": "Get movie details by TMDb external ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie by external ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TMDb Movie ID",
                        "name": "externalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/genre/{genre}": {
            "get": {
                "description": "Get movies filtered by genre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movies by genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre name",
                        "name": "genre",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/popular": {
            "get": {
                "description": "Get a list of popular movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get popular movies",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/search": {
            "get": {
                "description": "Search for movies by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Search movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "Get movie details by internal database ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new review for a movie with rating and/or content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a movie review",
                "parameters": [
                    {
                        "description": "Review data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.CreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Review already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews/movie/{movieId}": {
            "get": {
                "description": "Get all reviews for a specific movie with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get movie reviews",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of movie reviews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid movie ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "description": "Get detailed information about a specific review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get review by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review details",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid review ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me/sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all active sessions for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "sessions"
                ],
                "summary": "Get user sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_domain.UserSession"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Revoke all sessions for the authenticated user (logout from all devices)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "sessions"
                ],
                "summary": "Revoke all sessions",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me/sessions/{sessionId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Revoke a specific session by session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "sessions"
                ],
                "summary": "Revoke specific session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me/settings": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user preferences like theme, notifications, privacy settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "settings"
                ],
                "summary": "Update user settings",
                "parameters": [
                    {
                        "description": "User settings to update",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler.UserSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_EduardoMG12_cine_api_v2_internal_domain.User": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_private": {
                    "type": "boolean"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_domain.UserSession": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.AuthResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.ConfirmEmailRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.CreateReviewRequest": {
            "type": "object",
            "required": [
                "movie_id"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 1
                },
                "movie_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse": {
            "type": "object",
            "properties": {
                "adult": {
                    "type": "boolean"
                },
                "backdrop_url": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "overview": {
                    "type": "string"
                },
                "poster_url": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "runtime": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "vote_average": {
                    "type": "number"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.MovieSearchResponse": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.MovieResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.RegisterRequest": {
            "type": "object",
            "required": [
                "display_name",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "display_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewMovieResponse": {
            "type": "object",
            "properties": {
                "adult": {
                    "type": "boolean"
                },
                "backdrop_url": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "overview": {
                    "type": "string"
                },
                "poster_url": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "runtime": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "vote_average": {
                    "type": "number"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movie": {
                    "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.ReviewMovieResponse"
                },
                "rating": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_dto.UserProfile": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_private": {
                    "type": "boolean"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_EduardoMG12_cine_api_v2_internal_utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_handler.UserSettingsRequest": {
            "type": "object",
            "properties": {
                "email_notifications": {
                    "type": "boolean"
                },
                "private_profile": {
                    "type": "boolean"
                },
                "push_notifications": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string",
                    "enum": [
                        "light",
                        "dark"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}